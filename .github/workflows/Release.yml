name: Release app

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
          cache: gradle

      - name: Set version code/name
        env:
          CI_SOURCEBRANCHNAME: ${{ github.ref_name }}
          CI_SOURCEVERSION: ${{ github.sha }}
          CI_BUILDID: ${{ github.run_id }}
          CI_PULLREQUESTNUMBER: ${{ github.event.number }}
        run: scripts/version_code.sh

      #      - name: Setup Android SDK
      #        uses: android-actions/setup-android@v2.0.10

      # This will decode the keystore from base 64 text representation that we have stored in secrets
      # and generates and keystore file and gets stored in /android-app path
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}

        run: |
          echo $ENCODED_STRING > keystore-b64.txt 
          mkdir -p signing
          base64 -d keystore-b64.txt > signing/Clausr.keystore

      - name: Build Release bundle
        env:
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          GOOGLE_PLAY_SIGNING_KEY_ALIAS: ${{ secrets.GOOGLE_PLAY_SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        run: ./gradlew bundleProdRelease --stacktrace

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/prodRelease/*.aab)" >> $GITHUB_OUTPUT

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: ${{ steps.releaseAab.outputs.aabfile }}

      - name: Upload Android Release to Play Store
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: dk.clausr.a1001albumsgenerator
          releaseFiles: app/build/outputs/bundle/prodRelease/app-prod-release.aab
          debugSymbols: app/build/intermediates/merged_native_libs/prodRelease/mergeProdReleaseNativeLibs/out/lib
          track: internal
          status: draft
          mappingFile: app/build/outputs/mapping/prodRelease/mapping.txt